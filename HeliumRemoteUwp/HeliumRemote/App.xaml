<Application
    x:Class="HeliumRemote.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="using:System"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:classes="using:HeliumRemote.Classes"
    xmlns:converters="using:HeliumRemote.Converters"
    RequestedTheme="Light">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries/>
            <converters:AlbumImageDownloadConverter x:Key="AlbumImageDownloadConverter"/>
            <converters:RatingToImageConverter x:Key="RatingToImageConverter"/>
            <converters:AlternationConverter x:Key="AlternationConverter"/>
            <converters:DurationConverter x:Key="DurationConverter"/>
            <converters:ArtistImageDownloadConverter x:Key="ArtistImageDownloadConverter"/>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
            <converters:RightTappedRoutedEventArgsConverter x:Key="RightTappedRoutedEventArgsConverter"/>
            <converters:UpperCaseConverter x:Key="UpperCaseConverter"/>
            <converters:PlayStateImageConverter x:Key="PlayStateImageConverter"/>
            <converters:BoolInvToVisibilityConverter x:Key="BoolInvToVisibilityConverter"/>
            <converters:BoolToOpacityConverter x:Key="BoolToOpacityConverter"/>

            <system:Double x:Key="IconSize">32</system:Double>

            <Color x:Key="DefaultBg">#121213</Color>
            <Color x:Key="DefaultFontColor">#f1f1f1</Color>
            <Color x:Key="DimFontColor">#99999a</Color>
            <Color x:Key="RowColor1">#252526</Color>
            <Color x:Key="RowColor2">#1e1e1e</Color>
            <Color x:Key="AccentColor">#007ACC</Color>
            <Color x:Key="PaneColor">#121213</Color>
            <Color x:Key="PlayingTrackBgColor">#aab064ab</Color>

            <Color x:Key="NavLineColor">#c131a3</Color>
            <Color x:Key="NavLineInactiveColor">#666667</Color>

            <Color x:Key="ButtonBgColor">#3399ee</Color>
            <Color x:Key="ButtonBorderColor">#2778ba</Color>
            <Color x:Key="ButtonBgDisabledColor">#a2a4a7</Color>
            <Color x:Key="ButtonBorderDisabledColor">#808285</Color>

            <Color x:Key="ButtonTextColor">#f1f1f1</Color>

            <Color x:Key="DimBg">#77333333</Color>
            <Color x:Key="DimBgEx">#55333333</Color>

            <SolidColorBrush x:Key="NavLineBrush" Color="{StaticResource NavLineColor}"/>
            <SolidColorBrush x:Key="NavLineDisabledBrush" Color="{StaticResource NavLineInactiveColor}"/>

            <SolidColorBrush x:Key="DefaultBgBrush" Color="{StaticResource DefaultBg}"/>
            <SolidColorBrush x:Key="DefaultFontBrush" Color="{StaticResource DefaultFontColor}"/>
            <SolidColorBrush x:Key="DimFontBrush" Color="{StaticResource DimFontColor}"/>
            <SolidColorBrush x:Key="RowColor1Brush" Color="{StaticResource RowColor1}"/>
            <SolidColorBrush x:Key="RowColor2Brush" Color="{StaticResource RowColor2}"/>
            <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}"/>
            <SolidColorBrush x:Key="PaneColorBrush" Color="{StaticResource PaneColor}"/>
            <SolidColorBrush x:Key="PlayingTrackBgBrush" Color="{StaticResource PlayingTrackBgColor}"/>

            <SolidColorBrush x:Key="ButtonBgBrush" Color="{StaticResource ButtonBgColor}"/>
            <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource ButtonBorderColor}"/>
            <SolidColorBrush x:Key="ButtonTextBrush" Color="{StaticResource ButtonTextColor}"/>
            <SolidColorBrush x:Key="ButtonBgDisabledBrush" Color="{StaticResource ButtonBgDisabledColor}"/>
            <SolidColorBrush x:Key="ButtonBorderDisabledBrush" Color="{StaticResource ButtonBorderDisabledColor}"/>

            <SolidColorBrush x:Key="DimBgBrush" Color="{StaticResource DimBg}"/>
            <SolidColorBrush x:Key="DimBgExBrush" Color="{StaticResource DimBgEx}"/>


            <Style TargetType="TextBlock" x:Key="TextStyle">
                <Setter Property="Foreground" Value="{StaticResource DefaultFontBrush}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            </Style>
            <Style TargetType="TextBlock" BasedOn="{StaticResource TextStyle}" x:Key="TextStyleSmall">
                <Setter Property="FontSize" Value="11"/>
            </Style>
            <Style TargetType="TextBlock" BasedOn="{StaticResource TextStyle}" x:Key="TextStyleLarger">
                <Setter Property="FontSize" Value="15"/>
            </Style>
            <Style TargetType="TextBlock" BasedOn="{StaticResource TextStyleDim}" x:Key="TextStyleDimLarger">
                <Setter Property="FontSize" Value="15"/>
            </Style>
            <Style TargetType="TextBlock" BasedOn="{StaticResource TextStyle}" x:Key="PageTitleStyle">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>
            <Style TargetType="TextBlock" x:Key="HeaderStyle" BasedOn="{StaticResource TextStyle}">
                <Setter Property="FontSize" Value="16"></Setter>
                <Setter Property="FontWeight" Value="SemiBold"></Setter>
                <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}"/>
            </Style>
            <Style TargetType="TextBlock" x:Key="TextStyleDim" BasedOn="{StaticResource TextStyle}">
                <Setter Property="Foreground" Value="{StaticResource DimFontBrush}"/>
            </Style>
            <Style TargetType="TextBlock" x:Key="MenuFontStyle" BasedOn="{StaticResource TextStyle}">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="8,0,0,0"/>
            </Style>
            <Style TargetType="TextBlock" x:Key="LetterViewFontStyle" BasedOn="{StaticResource TextStyle}">
                <Setter Property="FontSize" Value="22"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <BitmapImage x:Key="DefaultAlbumImage" UriSource="/Images/s_no_album.png" />
            <BitmapImage x:Key="DefaultArtistImage" UriSource="/Images/s_no_artist.png" />
            <BitmapImage x:Key="DefaultAlbumImageLarge" UriSource="/Images/no_album.png" />
            <BitmapImage x:Key="DefaultArtistImageLarge" UriSource="/Images/no_artist.png" />

            <DataTemplate x:Key="LetterItem">
                <Grid Background="{Binding Index, Converter={StaticResource AlternationConverter}}" HorizontalAlignment="Stretch">
                    <TextBlock Style="{StaticResource LetterViewFontStyle}" Text="{Binding Letter}" Margin="6,10"/>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="LetterListItem">
                <Grid Background="{StaticResource RowColor2Brush}" HorizontalAlignment="Stretch">
                    <TextBlock Style="{StaticResource LetterViewFontStyle}" Text="{Binding Letter}" Margin="6,10" HorizontalAlignment="Center" TextWrapping="Wrap"/>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="PlaylistItem">
                <Grid Background="{Binding Index, Converter={StaticResource AlternationConverter}}" HorizontalAlignment="Stretch">
                    <StackPanel>
                        <TextBlock Style="{StaticResource LetterViewFontStyle}" Text="{Binding Playlist.Name}" Margin="6"/>
                        <StackPanel Orientation="Horizontal" Margin="6,0,6,6">
                            <TextBlock Style="{StaticResource TextStyleDimLarger}" Text="{Binding Playlist.Count}"/>
                            <TextBlock Style="{StaticResource TextStyleDimLarger}" x:Uid="Tracks" Margin="6,0,0,0"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="SmartPlaylistItem">
                <Grid Background="{Binding Index, Converter={StaticResource AlternationConverter}}" HorizontalAlignment="Stretch">
                    <TextBlock Style="{StaticResource LetterViewFontStyle}" Text="{Binding Playlist.Name}" Margin="6,10"/>
                </Grid>
            </DataTemplate>

            <Style x:Key="GridItemContainerStyle" TargetType="GridViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Width" Value="282"/>
                <Setter Property="Height" Value="272"/>
            </Style>
            <Style x:Key="ArtistGridItemContainerStyle" TargetType="GridViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Width" Value="282"/>
                <Setter Property="Height" Value="256"/>
            </Style>

            <Style x:Key="MenuIcon" TargetType="Image">
                <Setter Property="Width" Value="32"></Setter>
                <Setter Property="Height" Value="32"></Setter>
            </Style>

            <Style x:Key="ListBoxItemContainerStyle" TargetType="ListBoxItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0"></Setter>
                <Setter Property="Padding" Value="0"></Setter>
            </Style>

            <Style x:Key="ImageButtonStyle" TargetType="Button">
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver"/>
                                        <VisualState x:Name="Pressed"/>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ImButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource ButtonBgBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonTextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1,1,1,4"/>
                <Setter Property="Padding" Value="8,4,8,4"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                <Setter Property="UseSystemFocusVisuals" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver"/>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonBgBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonBgDisabledBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonBorderDisabledBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate x:Key="AlbumListItem">
                <Grid Background="{Binding Album.Index, Converter={StaticResource AlternationConverter}}" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="96"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border Margin="4">
                        <Border.Background>
                            <ImageBrush Stretch="None" ImageSource="/Images/s_no_album.png"/>
                        </Border.Background>

                        <Image Width="96" Height="96" Source="{Binding Album.Id, Converter={StaticResource AlbumImageDownloadConverter}, FallbackValue={StaticResource DefaultAlbumImage}}"/>
                    </Border>

                    <StackPanel Grid.Column="1">
                        <TextBlock Text="{Binding Album.Name}" Style="{StaticResource TextStyle}"/>
                        <TextBlock Text="{Binding Album.Artist}" Style="{StaticResource TextStyleDim}"/>
                        <TextBlock Text="{Binding Album.ReleaseYear}" Style="{StaticResource TextStyleDim}"/>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/Images/isfavl.png" Height="20" Visibility="{Binding Album.IsFavourite, Converter={StaticResource BoolToVisibilityConverter}}" Margin="0,0,4,0"/>
                            <Image Source="{Binding Album.Rating, Converter={StaticResource RatingToImageConverter}}" Height="20"/>
                        </StackPanel>
                    </StackPanel>

                    <Button Grid.Column="2" Style="{StaticResource ImageButtonStyle}" Command="{Binding ElementName=RootGrid, Path=DataContext.ShowAlbumActionsCommand}" CommandParameter="{Binding Album.Id}"  Margin="{Binding ElementName=RootGrid, Path=DataContext.ElementMargin}">
                        <Image Source="/Images/dots.png" Width="40" VerticalAlignment="Center"/>
                    </Button>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="AlbumGroupedItem">
                <Grid x:Name="AlbumGrid" Background="{Binding Album.Index, Converter={StaticResource AlternationConverter}}" HorizontalAlignment="Stretch" Margin="8">

                    <Interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="RightTapped">
                            <classes:OpenMenuFlyoutAction />
                        </core:EventTriggerBehavior>
                        <core:EventTriggerBehavior EventName="Holding">
                            <classes:OpenMenuFlyoutAction />
                        </core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>

                    <FlyoutBase.AttachedFlyout>
                        <MenuFlyout>
                            <MenuFlyoutItem Text="Play now" Command="{Binding DataContext.PlayNowCommand, ElementName=GridView}" CommandParameter="{Binding Album.Id}"/>
                            <MenuFlyoutItem Text="Enqueue next" Command="{Binding DataContext.EnqueueNextCommand, ElementName=GridView}" CommandParameter="{Binding Album.Id}"/>
                            <MenuFlyoutItem Text="Enqueue last" Command="{Binding DataContext.EnqueueLastCommand, ElementName=GridView}" CommandParameter="{Binding Album.Id}"/>
                            <MenuFlyoutItem Text="Add to playlist" Command="{Binding DataContext.AddToPlaylistCommand, ElementName=GridView}" CommandParameter="{Binding Album.Id}"/>
                        </MenuFlyout>
                    </FlyoutBase.AttachedFlyout>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="192"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Border>
                        <Border.Background>
                            <ImageBrush Stretch="Uniform" ImageSource="/Images/no_album.png"/>
                        </Border.Background>

                        <Image Width="192" Height="192" Source="{Binding Album.Id, Converter={StaticResource AlbumImageDownloadConverter}, ConverterParameter=Medium}"/>
                    </Border>

                    <StackPanel Grid.Row="1" Margin="6,0">
                        <TextBlock Text="{Binding Album.Artist}" Style="{StaticResource TextStyleDim}"/>
                        <TextBlock Text="{Binding Album.Name}" Style="{StaticResource TextStyle}"/>
                        <RelativePanel>
                            <Image Source="/Images/isfavl.png" Height="20" Visibility="{Binding Album.IsFavourite, Converter={StaticResource BoolToVisibilityConverter}}" x:Name="IsFavImage" Margin="0,0,8,0"/>
                            <Image Source="{Binding Album.Rating, Converter={StaticResource RatingToImageConverter}}" Height="20" RelativePanel.RightOf="IsFavImage" Margin="0,0,4,0"/>
                            <TextBlock Text="{Binding Album.ReleaseYear}" Style="{StaticResource TextStyleDim}" RelativePanel.AlignRightWithPanel="True"/>
                        </RelativePanel>
                    </StackPanel>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="ArtistListItem">
                <Grid Background="{Binding Index, Converter={StaticResource AlternationConverter}}" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="96"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Border Margin="4">
                        <Border.Background>
                            <ImageBrush Stretch="None" ImageSource="/Images/s_no_artist.png"/>
                        </Border.Background>

                        <Image Width="96" Height="96" Source="{Binding Id, Converter={StaticResource ArtistImageDownloadConverter}}"/>
                    </Border>

                    <StackPanel Grid.Column="1">
                        <TextBlock Text="{Binding ArtistName}" Style="{StaticResource TextStyle}"/>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/Images/isfavl.png" Height="20" Visibility="{Binding IsFavourite, Converter={StaticResource BoolToVisibilityConverter}}" Margin="0,0,4,0"/>
                            <Image Source="{Binding Rating, Converter={StaticResource RatingToImageConverter}}" Height="20"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="ArtistGroupedItem">
                <Grid Background="{Binding Index, Converter={StaticResource AlternationConverter}}" HorizontalAlignment="Stretch" Margin="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="192"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Border>
                        <Border.Background>
                            <ImageBrush Stretch="Uniform" ImageSource="/Images/no_artist.png"/>
                        </Border.Background>

                        <Image Width="192" Height="192" Source="{Binding Id, Converter={StaticResource ArtistImageDownloadConverter}, ConverterParameter=Medium}"/>
                    </Border>

                    <StackPanel Grid.Row="1" Margin="6,0">
                        <TextBlock Text="{Binding ArtistName}" Style="{StaticResource TextStyle}"/>
                        <RelativePanel>
                            <Image Source="/Images/isfavl.png" Height="20" Visibility="{Binding IsFavourite, Converter={StaticResource BoolToVisibilityConverter}}" x:Name="IsFavImage" Margin="0,0,8,0"/>
                            <Image Source="{Binding Rating, Converter={StaticResource RatingToImageConverter}}" Height="20" RelativePanel.RightOf="IsFavImage" Margin="0,0,4,0"/>
                        </RelativePanel>
                    </StackPanel>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="TrackTemplate">
                <Grid Background="{Binding Index, Converter={StaticResource AlternationConverter}}" Padding="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel>
                        <TextBlock Text="{Binding Track.Title}" Style="{StaticResource TextStyle}"/>
                        <TextBlock Text="{Binding Track.Artist}" Style="{StaticResource TextStyleDim}"/>
                        <TextBlock Text="{Binding Track.Album}" Style="{StaticResource TextStyleDim}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Track.Length,Converter={StaticResource DurationConverter}}" Style="{StaticResource TextStyleDim}"/>
                            <Image Source="/Images/isfavl.png" Visibility="{Binding Track.IsFavourite, Converter={StaticResource BoolToVisibilityConverter}}" Margin="6,0,0,0" Height="20"/>
                            <Image Source="{Binding Track.Rating, Converter={StaticResource RatingToImageConverter}}" Height="20" Margin="6,0,0,0"/>
                        </StackPanel>
                    </StackPanel>
                    <Button Grid.Column="1" Style="{StaticResource ImageButtonStyle}" Command="{Binding DataContext.ShowTrackActionsCommand, ElementName=RootGrid}" CommandParameter="{Binding Track.Id}" Margin="{Binding ElementName=RootGrid, Path=DataContext.ElementMargin}">
                        <Image Source="/Images/dots.png" Width="40" VerticalAlignment="Center"/>
                    </Button>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="PqTrackTemplate">
                <Grid Background="{Binding Index, Converter={StaticResource AlternationConverter}}" Padding="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel>
                        <TextBlock Text="{Binding Track.Title}" Style="{StaticResource TextStyle}"/>
                        <TextBlock Text="{Binding Track.Artist}" Style="{StaticResource TextStyleDim}"/>
                        <TextBlock Text="{Binding Track.Album}" Style="{StaticResource TextStyleDim}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Track.Length,Converter={StaticResource DurationConverter}}" Style="{StaticResource TextStyleDim}"/>
                            <Image Source="/Images/isfavl.png" Visibility="{Binding Track.IsFavourite, Converter={StaticResource BoolToVisibilityConverter}}" Margin="6,0,0,0" Height="20"/>
                            <Image Source="{Binding Track.Rating, Converter={StaticResource RatingToImageConverter}}" Height="20" Margin="6,0,0,0"/>
                        </StackPanel>
                    </StackPanel>
                    <Button Grid.Column="1" Style="{StaticResource ImageButtonStyle}" Command="{Binding DataContext.PlayByIndexCommand, ElementName=RootGrid}" CommandParameter="{Binding PlayQueueIndex}"  Margin="{Binding ElementName=RootGrid, Path=DataContext.ElementMargin}">
                        <Image Source="/Images/appbar_play_rest.png" Width="40" VerticalAlignment="Center"/>
                    </Button>
                </Grid>
            </DataTemplate>

        </ResourceDictionary>
    </Application.Resources>

</Application>
